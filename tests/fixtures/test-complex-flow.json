{
  "version": "1.0",
  "outputSchemas": {
    "ResultString": {
      "type": "object",
      "properties": {
        "result": { "type": "string", "description": "The result as plain text" }
      },
      "required": ["result"]
    },
    "ProblemSolution": {
      "type": "object",
      "properties": {
        "result": { "type": "string", "description": "The complete solution with steps and final answer" }
      },
      "required": ["result"]
    },
    "EvaluationFeedback": {
      "type": "object",
      "properties": {
        "result": { "type": "string", "description": "Evaluation result with feedback and score" },
        "score": { "type": "string", "enum": ["pass", "needs_improvement", "fail"] }
      },
      "required": ["result", "score"]
    }
  },
  "mcpServers": {},
  "agents": {
    "test_calculator": {
      "name": "test_calculator",
      "instructions": "You are a test calculator agent. Always respond with 'Calculation result: 42' in the result property.",
      "outputSchemaRef": "ResultString",
      "modelSettings": { "store": false, "temperature": 0 },
      "mcpServerRefs": [],
      "tools": []
    },
    "test_solver": {
      "name": "test_solver",
      "instructions": "You are a test problem solver. Always respond with 'Solution: Test solution' in the result property.",
      "outputSchemaRef": "ProblemSolution",
      "modelSettings": { "store": false, "temperature": 0 },
      "mcpServerRefs": [],
      "tools": []
    },
    "test_evaluator": {
      "name": "test_evaluator",
      "instructions": "You are a test evaluator. Always respond with 'Evaluation: Test evaluation' and score 'pass' in the result property.",
      "outputSchemaRef": "EvaluationFeedback",
      "modelSettings": { "store": false, "temperature": 0.1 },
      "mcpServerRefs": [],
      "tools": []
    }
  },
  "flow": {
    "steps": [
      {
        "id": "step1",
        "type": "single_agent",
        "agentRef": "test_calculator",
        "io": { "carryHistory": true }
      },
      {
        "id": "step2",
        "type": "agent_reviewer",
        "proposalAgentRef": "test_solver",
        "reviewerAgentRef": "test_evaluator",
        "passCondition": "score == 'pass'",
        "maxTurns": 2,
        "feedbackInjection": "as_user",
        "io": { "carryHistory": true }
      },
      {
        "id": "step3",
        "type": "single_agent",
        "agentRef": "test_solver",
        "io": { "carryHistory": true }
      }
    ]
  }
}
